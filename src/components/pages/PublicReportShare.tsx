// src/components/pages/PublicReportShare.tsx
// Public-facing page for shared AI visibility reports (no authentication required)

import { AlertCircle, BarChart3, Loader, Target, TrendingUp } from 'lucide-react';
import React, { useEffect, useState } from 'react';
import { ExternalReportService } from '../../lib/externalReportService';
import type { ExternalReport } from '../../types/externalReport';

interface PublicReportShareProps {
  token: string; // From URL params
}

export const PublicReportShare: React.FC<PublicReportShareProps> = ({ token }) => {
  const [report, setReport] = useState<ExternalReport | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string>('');

  useEffect(() => {
    loadReport();
  }, [token]);

  const loadReport = async () => {
    if (!token) {
      setError('Invalid share link');
      setLoading(false);
      return;
    }

    const { data, error: fetchError } = await ExternalReportService.getReportByToken(token);

    if (fetchError || !data) {
      setError('Report not found or access denied');
    } else if (data.status !== 'completed') {
      setError('This report is still being generated');
    } else {
      setReport(data);
    }

    setLoading(false);
  };

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900">
        <div className="text-center">
          <Loader size={48} className="text-blue-500 animate-spin mx-auto mb-4" />
          <p className="text-gray-600 dark:text-gray-400">Loading report...</p>
        </div>
      </div>
    );
  }

  if (error || !report) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900">
        <div className="text-center max-w-md">
          <AlertCircle size={64} className="text-red-500 mx-auto mb-4" />
          <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-2">
            Report Not Found
          </h1>
          <p className="text-gray-600 dark:text-gray-400">{error}</p>
        </div>
      </div>
    );
  }

  const reportData = report.report_data;
  const overallScore = reportData?.overall_score || 0;
  const platformScores = report.ai_platform_scores || {};
  const contentGaps = report.content_gap_analysis;

  const getGradeColor = (score: number): string => {
    if (score >= 90) return 'text-green-600';
    if (score >= 80) return 'text-blue-600';
    if (score >= 70) return 'text-yellow-600';
    if (score >= 60) return 'text-orange-600';
    return 'text-red-600';
  };

  const getGrade = (score: number): string => {
    if (score >= 90) return 'A+';
    if (score >= 85) return 'A';
    if (score >= 80) return 'B+';
    if (score >= 75) return 'B';
    if (score >= 70) return 'C+';
    if (score >= 65) return 'C';
    if (score >= 60) return 'D';
    return 'F';
  };

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900">
      {/* Header */}
      <div className="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
        <div className="max-w-6xl mx-auto px-6 py-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl font-bold text-gray-900 dark:text-white">
                {report.business_name || 'Business'} - AI Visibility Report
              </h1>
              <p className="text-sm text-gray-600 dark:text-gray-400 mt-1">
                Generated by OK Local GBP Copilot â€¢ {new Date(report.created_at).toLocaleDateString()}
              </p>
            </div>
            <div className="text-right">
              <div className={`text-4xl font-bold ${getGradeColor(overallScore)}`}>
                {getGrade(overallScore)}
              </div>
              <div className="text-sm text-gray-600 dark:text-gray-400">
                {overallScore}/100
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-6xl mx-auto px-6 py-8 space-y-8">
        {/* Executive Summary */}
        <div className="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
          <div className="flex items-center gap-3 mb-4">
            <div className="p-2 bg-blue-100 dark:bg-blue-900/30 rounded-lg">
              <TrendingUp size={24} className="text-blue-600 dark:text-blue-400" />
            </div>
            <h2 className="text-xl font-bold text-gray-900 dark:text-white">
              Executive Summary
            </h2>
          </div>
          <div className="space-y-4">
            <p className="text-gray-700 dark:text-gray-300">
              This report analyzes how <strong>{report.business_name || 'this business'}</strong> appears 
              in AI-powered search results across ChatGPT, Claude, Gemini, and Perplexity.
            </p>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg">
                <div className="text-sm text-gray-600 dark:text-gray-400 mb-1">Overall Score</div>
                <div className="text-2xl font-bold text-gray-900 dark:text-white">
                  {overallScore}/100
                </div>
              </div>
              <div className="p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg">
                <div className="text-sm text-gray-600 dark:text-gray-400 mb-1">Platforms Analyzed</div>
                <div className="text-2xl font-bold text-gray-900 dark:text-white">
                  {Object.keys(platformScores).length}
                </div>
              </div>
              <div className="p-4 bg-gray-50 dark:bg-gray-700/50 rounded-lg">
                <div className="text-sm text-gray-600 dark:text-gray-400 mb-1">Content Gaps Found</div>
                <div className="text-2xl font-bold text-gray-900 dark:text-white">
                  {contentGaps?.total_gaps || 0}
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* AI Platform Scores */}
        <div className="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
          <div className="flex items-center gap-3 mb-6">
            <div className="p-2 bg-purple-100 dark:bg-purple-900/30 rounded-lg">
              <BarChart3 size={24} className="text-purple-600 dark:text-purple-400" />
            </div>
            <h2 className="text-xl font-bold text-gray-900 dark:text-white">
              AI Platform Scores
            </h2>
          </div>
          <div className="space-y-4">
            {Object.entries(platformScores).map(([platform, score]) => (
              <div key={platform}>
                <div className="flex items-center justify-between mb-2">
                  <span className="text-sm font-medium text-gray-700 dark:text-gray-300 capitalize">
                    {platform}
                  </span>
                  <span className="text-sm font-bold text-gray-900 dark:text-white">
                    {score}/100
                  </span>
                </div>
                <div className="h-3 bg-gray-200 dark:bg-gray-700 rounded-full overflow-hidden">
                  <div
                    className={`h-full transition-all ${
                      score >= 80
                        ? 'bg-green-500'
                        : score >= 60
                        ? 'bg-yellow-500'
                        : 'bg-red-500'
                    }`}
                    style={{ width: `${score}%` }}
                  />
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Content Gaps */}
        {contentGaps && contentGaps.total_gaps > 0 && (
          <div className="bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 p-6">
            <div className="flex items-center gap-3 mb-6">
              <div className="p-2 bg-orange-100 dark:bg-orange-900/30 rounded-lg">
                <Target size={24} className="text-orange-600 dark:text-orange-400" />
              </div>
              <h2 className="text-xl font-bold text-gray-900 dark:text-white">
                Content Gap Analysis
              </h2>
            </div>
            <div className="space-y-4">
              {/* Critical Gaps */}
              {contentGaps.severity_breakdown.critical > 0 && (
                <div className="p-4 bg-red-50 dark:bg-red-900/20 rounded-lg border border-red-200 dark:border-red-800">
                  <div className="flex items-center gap-2 mb-2">
                    <AlertCircle size={18} className="text-red-600 dark:text-red-400" />
                    <span className="font-semibold text-red-900 dark:text-red-300">
                      {contentGaps.severity_breakdown.critical} Critical Gaps
                    </span>
                  </div>
                  <p className="text-sm text-red-800 dark:text-red-300">
                    These are high-priority issues that significantly impact your AI visibility.
                  </p>
                </div>
              )}

              {/* Significant Gaps */}
              {contentGaps.severity_breakdown.significant > 0 && (
                <div className="p-4 bg-yellow-50 dark:bg-yellow-900/20 rounded-lg border border-yellow-200 dark:border-yellow-800">
                  <div className="flex items-center gap-2 mb-2">
                    <AlertCircle size={18} className="text-yellow-600 dark:text-yellow-400" />
                    <span className="font-semibold text-yellow-900 dark:text-yellow-300">
                      {contentGaps.severity_breakdown.significant} Significant Gaps
                    </span>
                  </div>
                  <p className="text-sm text-yellow-800 dark:text-yellow-300">
                    Important opportunities to improve your competitive position.
                  </p>
                </div>
              )}
            </div>
          </div>
        )}

        {/* Call to Action */}
        <div className="bg-gradient-to-r from-blue-600 to-blue-700 rounded-lg p-8 text-white text-center">
          <h2 className="text-2xl font-bold mb-4">
            Want to improve your AI visibility?
          </h2>
          <p className="mb-6 text-blue-100">
            Get personalized recommendations and track your progress month-over-month
          </p>
          <div className="flex gap-4 justify-center">
            <button className="px-6 py-3 bg-white text-blue-600 rounded-lg font-semibold hover:bg-gray-100 transition-colors">
              Contact Us
            </button>
            <button className="px-6 py-3 border-2 border-white text-white rounded-lg font-semibold hover:bg-white/10 transition-colors">
              Learn More
            </button>
          </div>
        </div>

        {/* Footer */}
        <div className="text-center text-sm text-gray-600 dark:text-gray-400 pt-8 border-t border-gray-200 dark:border-gray-700">
          <p>Report generated by OK Local GBP Copilot</p>
          <p className="mt-1">AI Visibility tracking for local businesses</p>
        </div>
      </div>
    </div>
  );
};